{"version":3,"sources":["img/logo.png","img/spinner.gif","components/ui/Header.js","components/characters/CharacterItem.js","components/ui/Spinner.js","components/characters/CharacterGrid.js","components/ui/Search.js","App.js","index.js"],"names":["module","exports","Header","className","src","logo","CharacterItem","item","img","alt","name","portrayed","nickname","birthday","status","Spinner","spinner","style","width","margin","display","CharacterGrid","items","isLoading","map","key","char_id","Search","getQuery","useState","text","setText","type","placeholder","autoFocus","value","onChange","e","q","target","App","setItems","setisLoading","query","setQuery","useEffect","a","Axios","result","data","fetchItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,kC,2ECA3CD,EAAOC,QAAU,IAA0B,qC,oICW5BC,EARA,WACb,OACE,4BAAQC,UAAU,UAChB,yBAAKC,IAAKC,Q,iBCyBDC,EA7BO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACE,yBAAKJ,UAAU,QACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACb,yBAAKC,IAAKG,EAAKC,IAAKC,IAAI,MAE1B,yBAAKN,UAAU,aACb,4BAAKI,EAAKG,MACV,4BACE,4BACE,+CADF,IACgCH,EAAKI,WAErC,4BACE,6CADF,IAC8BJ,EAAKK,UAEnC,4BACE,6CADF,IAC8BL,EAAKM,UAEnC,4BACE,2CADF,IAC4BN,EAAKO,a,gBCV9BC,EATC,WACd,OACE,yBACEX,IAAKY,IACLC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,YCSzCC,EAZO,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MACvB,OAD8C,EAAhBC,UAE5B,kBAAC,EAAD,MAEA,6BAASpB,UAAU,SAChBmB,EAAME,KAAI,SAAAjB,GAAI,OACb,kBAAC,EAAD,CAAeA,KAAMA,EAAMkB,IAAKlB,EAAKmB,eCgB9BC,EAxBA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACPC,mBAAS,IADF,mBACxBC,EADwB,KAClBC,EADkB,KAQ/B,OACE,6BAAS5B,UAAU,UACjB,8BACE,2BACE6B,KAAK,OACL7B,UAAU,eACV8B,YAAY,uBACZC,WAAS,EACTC,MAAOL,EACPM,SAAU,SAAAC,GAAC,OAdFC,EAceD,EAAEE,OAAOJ,MAbvCJ,EAAQO,QACRV,EAASU,GAFM,IAAAA,QC6BJE,EA1BH,WAAO,IAAD,EACUX,mBAAS,IADnB,mBACTP,EADS,KACFmB,EADE,OAEkBZ,oBAAS,GAF3B,mBAETN,EAFS,KAEEmB,EAFF,OAGUb,mBAAS,IAHnB,mBAGTc,EAHS,KAGFC,EAHE,KAiBhB,OAZAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,sEACIC,IAAM,sDAAD,OAC8BJ,IAFvC,OACXK,EADW,OAIjBP,EAASO,EAAOC,MAChBP,GAAa,GALI,2CAAH,qDAQhBQ,KACC,CAACP,IAGF,yBAAKxC,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQyB,SAAU,SAAAU,GAAC,OAAIM,EAASN,MAChC,kBAAC,EAAD,CAAef,UAAWA,EAAWD,MAAOA,MCzBlD6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.63e2e91f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3795f66d.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.235b9b3e.gif\";","import React from \"react\";\nimport logo from \"../../img/logo.png\";\n\nconst Header = () => {\n  return (\n    <header className=\"center\">\n      <img src={logo}></img>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst CharacterItem = ({ item }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-inner\">\n        <div className=\"card-front\">\n          <img src={item.img} alt=\"\" />\n        </div>\n        <div className=\"card-back\">\n          <h1>{item.name}</h1>\n          <ul>\n            <li>\n              <strong>Actor Name:</strong> {item.portrayed}\n            </li>\n            <li>\n              <strong>Nickname:</strong> {item.nickname}\n            </li>\n            <li>\n              <strong>Birthday:</strong> {item.birthday}\n            </li>\n            <li>\n              <strong>Status:</strong> {item.status}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CharacterItem;\n","import React from \"react\";\nimport spinner from \"../../img/spinner.gif\";\n\nconst Spinner = () => {\n  return (\n    <img\n      src={spinner}\n      style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\n    />\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport CharacterItem from \"./CharacterItem\";\nimport Spinner from \"../ui/Spinner\";\n\nconst CharacterGrid = ({ items, isLoading }) => {\n  return isLoading ? (\n    <Spinner />\n  ) : (\n    <section className=\"cards\">\n      {items.map(item => (\n        <CharacterItem item={item} key={item.char_id} />\n      ))}\n    </section>\n  );\n};\n\nexport default CharacterGrid;\n","import React, { useState } from \"react\";\n\nconst Search = ({ getQuery }) => {\n  const [text, setText] = useState(\"\");\n\n  const onChange = q => {\n    setText(q);\n    getQuery(q);\n  };\n\n  return (\n    <section className=\"search\">\n      <form>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search characters...\"\n          autoFocus\n          value={text}\n          onChange={e => onChange(e.target.value)}\n        />\n      </form>\n    </section>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/ui/Header\";\nimport Axios from \"axios\";\nimport CharacterGrid from \"./components/characters/CharacterGrid\";\nimport Search from \"./components/ui/Search\";\nimport spinner from \"./img/spinner.gif\";\n\nconst App = () => {\n  const [items, setItems] = useState([]);\n  const [isLoading, setisLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      const result = await Axios(\n        `https://www.breakingbadapi.com/api/characters?name=${query}`\n      );\n      setItems(result.data);\n      setisLoading(false);\n    };\n\n    fetchItems();\n  }, [query]);\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Search getQuery={q => setQuery(q)} />\n      <CharacterGrid isLoading={isLoading} items={items} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}